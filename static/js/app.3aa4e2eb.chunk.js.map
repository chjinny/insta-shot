{"version":3,"sources":["assets/logo.png","ImagePicker.js","App.js"],"names":["module","exports","dataURLtoFile","dataurl","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","ImageSelector","props","useEffect","a","async","Platform","OS","ImagePicker","status","alert","View","style","flex","alignItems","justifyContent","Button","title","onPress","mediaTypes","All","allowsEditing","aspect","quality","result","console","log","cancelled","file","uri","data","FormData","append","setIsLoading","axios","method","url","then","res","setImages","App","useState","images","isLoading","adSize","setAdSize","test","navigator","userAgent","Analytics","error","padding","minWidth","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","Image","source","logo","marginTop","marginBottom","borderRadius","flexDirection","Text","resizeMode","allowtransparency","src","frameBorder","scrolling"],"mappings":"wEAAAA,EAAOC,QAAU,IAA0B,kC,yNCMrCC,EAAgB,SAACC,EAASC,GAM9B,IALA,IAAMC,EAAMF,EAAQG,MAAM,KACpBC,EAAOF,EAAI,GAAGG,MAAM,WAAW,GAC/BC,EAAOC,KAAKL,EAAI,IAClBM,EAAIF,EAAKG,OACPC,EAAQ,IAAIC,WAAWH,GACtBA,GACLE,EAAMF,EAAI,GAAKF,EAAKM,WAAWJ,EAAI,GACnCA,GAAK,EAEP,OAAO,IAAIK,KAAK,CAACH,GAAQT,EAAU,CAAEa,KAAMV,KAI9B,SAASW,EAAcC,GACpCC,qBAAU,YACR,WAAC,QAAAC,EAAAC,OAAA,mDACqB,QAAhBC,IAASC,GADd,kCAAAH,EAAA,MAE4BI,OAF5B,gBAGkB,YAHlB,EAEWC,QAENC,MAAM,+IAJX,4DAAD,KAQC,IA4BH,OACE,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,EAAGC,WAAY,SAAUC,eAAgB,WAC5D,kBAACC,EAAA,EAAD,CAAQC,MAAM,wCAAUC,QA5BV,8BAAAd,EAAAC,OAAA,kEAAAD,EAAA,MACGI,IAAoC,CACrDW,WAAYX,IAA6BY,IACzCC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAS,KALK,OACZC,EADY,OAQhBC,QAAQC,IAAIF,GAEPA,EAAOG,YACJC,EAAO3C,EAAcuC,EAAOK,MAC5BC,EAAM,IAAIC,KACXC,OAAO,OAAQJ,GACpB1B,EAAM+B,cAAa,GACnBC,IAAM,CACJC,OAAQ,OACRC,IAAK,2CACLN,KAAOA,IACNO,MAAK,SAACC,GACPpC,EAAMqC,UAAU,CAACf,EAAQc,EAAIR,OAC7B5B,EAAM+B,cAAa,OArBP,gE,wCCvBL,SAASO,IACtB,MAA4BC,mBAAS,CAAC,KAAM,OAA5C,WAAOC,EAAP,KAAeH,EAAf,KACA,EAAkCE,oBAAS,GAA3C,WAAOE,EAAP,KAAkBV,EAAlB,KACA,EAA4BQ,mBAAS,CAAC,IAAK,KAA3C,WAAOG,EAAP,KAAeC,EAAf,KAYA,OAXApB,QAAQC,IAAIgB,GACZvC,qBAAU,WACR0C,EAAU,4BAA4BC,KAAKC,UAAUC,WAAY,CAAC,IAAK,IAAI,CAAC,IAAK,KAChF,EAAA5C,EAAAC,OAAA,2EAAAD,EAAA,MAEwB6C,KAAwC,IAFhE,6DAIKxB,QAAQyB,MAAR,MAJL,iEAOA,IAED,kBAACvC,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,IACjB,kBAACF,EAAA,EAAD,CAAMC,MAAO,CAACuC,QAAU,EAAGC,SAAU,GAAItC,WAAa,SAAWC,eAAe,aAAcD,WAAW,SACzGuC,aAAc,CAACC,MAAO,EAAGC,OAAQ,IAAMC,cAAc,GAAKC,aAAa,GACvEC,UAAW,KAET,kBAACC,EAAA,EAAD,CAAOC,OAAQC,IAAMjD,MAAO,CAAC0C,MAAQ,IAAKC,OAAQ,IAAKO,UAAU,GAAKC,aAAa,GAAIC,aAAe,OAEvGrB,EAAY,kBAAChC,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,GAAIoD,cAAc,MAAOlD,eAAe,SAAUD,WAAW,WAC3F,kBAACoD,EAAA,EAAD,iIAGF,kBAACvD,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,GAAIoD,cAAc,QACnC,kBAACtD,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,IACf6B,EAAO,GAKT,kBAACiB,EAAA,EAAD,CAAOC,OAAQ,CAAE/B,IAAKa,EAAO,GAAGb,KAAOjB,MAAO,CAACC,KAAO,EAAGsD,WAAY,aAJrE,kBAACxD,EAAA,EAAD,CAAMC,MAAS,CAACC,KAAK,EAAGC,WAAW,SAAUC,eAAe,WAC1D,kBAACmD,EAAA,EAAD,qEAKJ,kBAACvD,EAAA,EAAD,CAAMC,MAAO,CAACE,WAAW,SAAUC,eAAe,SAAUoC,QAAQ,KAClE,kBAACe,EAAA,EAAD,gBAEF,kBAACvD,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,IACf6B,EAAO,GAKT,kBAACiB,EAAA,EAAD,CAAOC,OAAQ,CAAE/B,IAAKa,EAAO,GAAGb,KAAOjB,MAAO,CAACC,KAAO,EAAGsD,WAAY,aAJrE,kBAACxD,EAAA,EAAD,CAAMC,MAAS,CAACC,KAAK,EAAGC,WAAW,SAAUC,eAAe,WAC1D,kBAACmD,EAAA,EAAD,uFAON,kBAACvD,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,EAAGsC,QAAU,GAAIrC,WAAW,SAC/CuC,aAAc,CAACC,MAAO,EAAGC,QAAS,IAAMC,cAAc,GAAKC,aAAa,GACxEC,UAAW,KAET,kBAACQ,EAAA,EAAD,yGACA,kBAACjE,EAAD,CAAesC,UAAWA,EAAWN,aAAcA,KAErD,kBAACtB,EAAA,EAAD,CAAMC,MAAO,CAACwC,SAAmB,EAAVR,EAAO,GAAMO,QAAU,EAAGpC,eAAe,SAAUD,WAAW,WACnF,4BAASwC,MAAOV,EAAO,GAAIW,OAAQX,EAAO,GAAIwB,kBAAkB,OAAOC,IAAI,oIAAoIC,YAAY,IAAIC,UAAU,OACzO,4BAASjB,MAAOV,EAAO,GAAIW,OAAQX,EAAO,GAAIwB,kBAAkB,OAAOC,IAAI,oIAAoIC,YAAY,IAAIC,UAAU,W","file":"static/js/app.3aa4e2eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.155c0ece.png\";","import React, { useState, useEffect } from 'react';\r\nimport { Button, Image, View, Platform } from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport axios from 'axios';\r\nimport FormData from 'form-data'\r\n\r\nconst dataURLtoFile = (dataurl, filename) => {\r\n  const arr = dataurl.split(',')\r\n  const mime = arr[0].match(/:(.*?);/)[1]\r\n  const bstr = atob(arr[1])\r\n  let n = bstr.length\r\n  const u8arr = new Uint8Array(n)\r\n  while (n) {\r\n    u8arr[n - 1] = bstr.charCodeAt(n - 1)\r\n    n -= 1 // to make eslint happy\r\n  }\r\n  return new File([u8arr], filename, { type: mime })\r\n}\r\n\r\n\r\nexport default function ImageSelector(props) {\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (Platform.OS !== 'web') {\r\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n        if (status !== 'granted') {\r\n          alert('앱에서 사진에 접근할 수 있도록 권한을 허가해 주세요');\r\n        }\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n\r\n    console.log(result);\r\n\r\n    if (!result.cancelled) {\r\n      const file = dataURLtoFile(result.uri)\r\n      const data= new FormData()\r\n      data.append(\"file\", file)\r\n      props.setIsLoading(true)\r\n      axios({\r\n        method: \"post\",\r\n        url: \"https://chjinny.duckdns.org:5000/process\", \r\n        data : data, \r\n      }).then((res) => {\r\n        props.setImages([result, res.data]);\r\n        props.setIsLoading(false)\r\n      })\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center'}}>\r\n      <Button title=\"사진 선택하기\" onPress={pickImage}/>\r\n    </View>\r\n  );\r\n}\r\n//{image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />}","import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, Image, Platform} from 'react-native';\r\nimport ImageSelector from './ImagePicker'\r\nimport logo from './assets/logo.png'; \r\nimport Correct from './Correct';\r\nimport { WebView } from 'react-native-webview';\r\nimport * as Analytics from 'expo-firebase-analytics';\r\n\r\nexport default function App() {\r\n  const [images, setImages] = useState([null, null]);\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [adSize, setAdSize] = useState([728, 90])\r\n  console.log(images)\r\n  useEffect(() =>{\r\n    setAdSize(/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)? [320, 50]:[728, 90]);\r\n    (async function() {\r\n      try {\r\n          const anal = await Analytics.setAnalyticsCollectionEnabled(true);\r\n      } catch (e) {\r\n          console.error(e);\r\n      }\r\n    })();\r\n  }, [])\r\n  return (\r\n    <View style={{flex:1}}>\r\n      <View style={{padding : 3, minWidth: 40, alignItems : 'center',  justifyContent:'flex-start', alignItems:'center',\r\n      shadowOffset: {width: 0, height: 10 }, shadowOpacity:0.1, shadowRadius:10,\r\n      elevation: 10 \r\n      }}>\r\n        <Image source={logo} style={{width : 200, height: 100, marginTop:10,  marginBottom:10, borderRadius : 10}} /> \r\n      </View>\r\n      {isLoading ? <View style={{flex:10, flexDirection:\"row\", justifyContent:'center', alignItems:'center'}}>\r\n        <Text>사진을 보정하고 있어요. 잠시만 기다려주세요</Text>\r\n      </View>\r\n      : \r\n      <View style={{flex:10, flexDirection:\"row\"}}>\r\n        <View style={{flex:1}}>\r\n          {!images[0] ? \r\n          <View style = {{flex:1, alignItems:'center', justifyContent:'center'}}>\r\n            <Text> 사진을 선택 해 주세요</Text>\r\n          </View>\r\n          : \r\n          <Image source={{ uri: images[0].uri }} style={{flex : 1, resizeMode: 'contain'}}/>}\r\n        </View>\r\n        <View style={{alignItems:\"center\", justifyContent:\"center\", padding:10}}>\r\n          <Text>➡</Text>\r\n        </View>\r\n        <View style={{flex:1}}>\r\n          {!images[1] ? \r\n          <View style = {{flex:1, alignItems:'center', justifyContent:'center'}}>\r\n            <Text>보정된 사진이 여기에 나와요</Text>\r\n          </View> \r\n          :\r\n          <Image source={{ uri: images[1].uri }} style={{flex : 1, resizeMode: 'contain'}}/>}\r\n        </View>\r\n      </View>\r\n      }\r\n      <View style={{flex:2, padding : 10, alignItems:'center',\r\n      shadowOffset: {width: 0, height: -10 }, shadowOpacity:0.1, shadowRadius:10,\r\n      elevation: 10 \r\n    }}>\r\n        <Text>용량이 큰 사진은 오래 걸릴 수 있어요</Text>\r\n        <ImageSelector setImages={setImages} setIsLoading={setIsLoading}></ImageSelector>\r\n      </View>\r\n      <View style={{minWidth:adSize[1]*2, padding : 0, justifyContent:'center', alignItems:'center'}}>\r\n        <iframe  width={adSize[0]} height={adSize[1]} allowtransparency=\"true\" src=\"https://tab2.clickmon.co.kr/pop/wp_ad_728.php?PopAd=CM_M_1003067%7C%5E%7CCM_A_1093475%7C%5E%7CAdver_M_1046207&mon_rf=REFERRER_URL\" frameBorder=\"0\" scrolling=\"no\"></iframe>\r\n        <iframe  width={adSize[0]} height={adSize[1]} allowtransparency=\"true\" src=\"https://tab2.clickmon.co.kr/pop/wp_ad_728.php?PopAd=CM_M_1003067%7C%5E%7CCM_A_1093475%7C%5E%7CAdver_M_1046207&mon_rf=REFERRER_URL\" frameBorder=\"0\" scrolling=\"no\"></iframe>\r\n      </View>\r\n    </View>\r\n  );\r\n}"],"sourceRoot":""}