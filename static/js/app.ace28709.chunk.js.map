{"version":3,"sources":["assets/logo.png","ImagePicker.js","App.js"],"names":["module","exports","dataURLtoFile","dataurl","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","ImageSelector","props","useEffect","a","async","Platform","OS","ImagePicker","status","alert","View","style","flex","alignItems","justifyContent","Button","title","onPress","mediaTypes","All","allowsEditing","aspect","quality","result","console","log","cancelled","file","uri","data","FormData","append","axios","method","url","then","res","setImages","App","useState","images","minWidth","Image","source","logo","width","height","marginTop","marginBottom","borderRadius","flexDirection","resizeMode","padding"],"mappings":"wEAAAA,EAAOC,QAAU,IAA0B,kC,iNCMrCC,EAAgB,SAACC,EAASC,GAM9B,IALA,IAAMC,EAAMF,EAAQG,MAAM,KACpBC,EAAOF,EAAI,GAAGG,MAAM,WAAW,GAC/BC,EAAOC,KAAKL,EAAI,IAClBM,EAAIF,EAAKG,OACPC,EAAQ,IAAIC,WAAWH,GACtBA,GACLE,EAAMF,EAAI,GAAKF,EAAKM,WAAWJ,EAAI,GACnCA,GAAK,EAEP,OAAO,IAAIK,KAAK,CAACH,GAAQT,EAAU,CAAEa,KAAMV,KAI9B,SAASW,EAAcC,GACpCC,qBAAU,YACR,WAAC,QAAAC,EAAAC,OAAA,mDACqB,QAAhBC,IAASC,GADd,kCAAAH,EAAA,MAE4BI,OAF5B,gBAGkB,YAHlB,EAEWC,QAENC,MAAM,+IAJX,4DAAD,KAQC,IA0BH,OACE,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,EAAGC,WAAY,SAAUC,eAAgB,WAC5D,kBAACC,EAAA,EAAD,CAAQC,MAAM,wCAAUC,QA1BV,8BAAAd,EAAAC,OAAA,kEAAAD,EAAA,MACGI,IAAoC,CACrDW,WAAYX,IAA6BY,IACzCC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAS,KALK,OACZC,EADY,OAQhBC,QAAQC,IAAIF,GAEPA,EAAOG,YACJC,EAAO3C,EAAcuC,EAAOK,MAC5BC,EAAM,IAAIC,KACXC,OAAO,OAAQJ,GACpBK,IAAM,CACJC,OAAQ,OACRC,IAAK,gCACLL,KAAOA,IACNM,MAAK,SAACC,GACPnC,EAAMoC,UAAU,CAACd,EAAQa,EAAIP,WAnBjB,gE,qBCzBL,SAASS,IACtB,MAA4BC,mBAAS,CAAC,KAAM,OAA5C,WAAOC,EAAP,KAAeH,EAAf,KAEA,OADAb,QAAQC,IAAIe,GAEV,kBAAC9B,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,IACjB,kBAACF,EAAA,EAAD,CAAMC,MAAO,CAAC8B,SAAU,GAAI5B,WAAa,WACvC,kBAAC6B,EAAA,EAAD,CAAOC,OAAQC,IAAMjC,MAAO,CAAEkC,MAAQ,IAAKC,OAAQ,IAAKC,UAAU,GAAKC,aAAa,GAAIC,aAAe,OAEzG,kBAACvC,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,GAAIsC,cAAc,QACnC,kBAACxC,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,IAChB4B,EAAO,IAAM,kBAACE,EAAA,EAAD,CAAOC,OAAQ,CAAEf,IAAKY,EAAO,GAAGZ,KAAOjB,MAAO,CAACC,KAAO,EAAGuC,WAAY,cAErF,kBAACzC,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,IAChB4B,EAAO,IAAM,kBAACE,EAAA,EAAD,CAAOC,OAAQ,CAAEf,IAAKY,EAAO,GAAGZ,KAAOjB,MAAO,CAACC,KAAO,EAAGuC,WAAY,eAGvF,kBAACzC,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,EAAGwC,QAAU,KAC9B,kBAACpD,EAAD,CAAeqC,UAAWA,Q","file":"static/js/app.ace28709.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.155c0ece.png\";","import React, { useState, useEffect } from 'react';\nimport { Button, Image, View, Platform } from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport axios from 'axios';\nimport FormData from 'form-data'\n\nconst dataURLtoFile = (dataurl, filename) => {\n  const arr = dataurl.split(',')\n  const mime = arr[0].match(/:(.*?);/)[1]\n  const bstr = atob(arr[1])\n  let n = bstr.length\n  const u8arr = new Uint8Array(n)\n  while (n) {\n    u8arr[n - 1] = bstr.charCodeAt(n - 1)\n    n -= 1 // to make eslint happy\n  }\n  return new File([u8arr], filename, { type: mime })\n}\n\n\nexport default function ImageSelector(props) {\n  useEffect(() => {\n    (async () => {\n      if (Platform.OS !== 'web') {\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== 'granted') {\n          alert('앱에서 사진에 접근할 수 있도록 권한을 허가해 주세요');\n        }\n      }\n    })();\n  }, []);\n\n  const pickImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    console.log(result);\n\n    if (!result.cancelled) {\n      const file = dataURLtoFile(result.uri)\n      const data= new FormData()\n      data.append(\"file\", file)\n      axios({\n        method: \"post\",\n        url: \"http://localhost:5000/process\", \n        data : data, \n      }).then((res) => {\n        props.setImages([result, res.data]);\n      })\n    }\n  };\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n      <Button title=\"사진 선택하기\" onPress={pickImage}/>\n    </View>\n  );\n}\n//{image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />}","import { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, Image} from 'react-native';\nimport ImageSelector from './ImagePicker'\nimport logo from './assets/logo.png'; \nimport Correct from './Correct';\n\nexport default function App() {\n  const [images, setImages] = useState([null, null]);\n  console.log(images)\n  return (\n    <View style={{flex:1}}>\n      <View style={{minWidth: 40, alignItems : 'center'}}>\n        <Image source={logo} style={{ width : 200, height: 100, marginTop:10,  marginBottom:10, borderRadius : 10}} /> \n      </View>\n      <View style={{flex:10, flexDirection:\"row\"}}>\n        <View style={{flex:1}}>\n          {images[0] && <Image source={{ uri: images[0].uri }} style={{flex : 1, resizeMode: 'contain'}}/>}\n        </View>\n        <View style={{flex:1}}>\n          {images[1] && <Image source={{ uri: images[1].uri }} style={{flex : 1, resizeMode: 'contain'}}/>}\n        </View>\n      </View>\n      <View style={{flex:1, padding : 10}}>\n        <ImageSelector setImages={setImages}></ImageSelector>\n      </View>\n    </View>\n  );\n}"],"sourceRoot":""}